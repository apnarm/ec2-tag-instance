#!/usr/bin/env python


"""Tag an EC2 Instance"""


from __future__ import print_function

import os
import re
import sys
import string
import argparse


import boto.ec2
import requests


def main():
    sys.stdout = os.fdopen(sys.stdout.fileno(), "w", 0)

    parser = argparse.ArgumentParser(description="Tag an EC2 Instance")

    parser.add_argument("--access-key", metavar="<ACCESS>", default=os.environ.get("AWS_ACCESS_KEY"))
    parser.add_argument("--secret-key", metavar="<SECRET>", default=os.environ.get("AWS_SECRET_KEY"))
    parser.add_argument("tags", metavar="<TAGS>", default=os.environ.get("TAGS"))

    args = parser.parse_args()

    instance = requests.get("http://169.254.169.254/latest/meta-data/instance-id").content
    availability_zone = requests.get("http://169.254.169.254/latest/meta-data/placement/availability-zone").content
    region = re.sub("([0-9][0-9]*)[a-z]*$", "\\1", availability_zone)

    conn = boto.ec2.connect_to_region(region, aws_access_key_id=args.access_key, aws_secret_access_key=args.secret_key)
    if conn is None:
        print("Error connecting to region {}".format(region))
        raise SystemExit(1)

    print("Tagging instance {} with {}".format(instance, args.tags))

    tags = args.tags.split(";")
    tags = dict([tag.split("=", 1) for tag in tags])

    conn.create_tags([instance], tags)


if __name__ == "__main__":
    main()
